using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;

// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using ArrowElectronicsAPI.Models;
//
//    var arrowElectronics = ArrowElectronics.FromJson(jsonString);

namespace ArrowElectronicsAPI.Models
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class ArrowElectronics
    {
        [JsonProperty("itemserviceresult")]
        public Itemserviceresult Itemserviceresult { get; set; }
    }

    public partial class Itemserviceresult
    {
        [JsonProperty("serviceMetaData")]
        public List<ServiceMetaDatum> ServiceMetaData { get; set; }

        [JsonProperty("transactionArea")]
        public List<TransactionArea> TransactionArea { get; set; }

        [JsonProperty("data")]
        public List<Datum> Data { get; set; }
    }

    public partial class Datum
    {
        [JsonProperty("partsRequested")]
        public long PartsRequested { get; set; }

        [JsonProperty("partsFound")]
        public long PartsFound { get; set; }

        [JsonProperty("partsNotFound")]
        public long PartsNotFound { get; set; }

        [JsonProperty("partsError")]
        public long PartsError { get; set; }

        [JsonProperty("resultList")]
        public List<ResultList> ResultList { get; set; }
    }

    public partial class ResultList
    {
        [JsonProperty("resources")]
        public List<object> Resources { get; set; }

        [JsonProperty("PartList")]
        public List<PartList> PartList { get; set; }

        [JsonProperty("requestedPartNum")]
        public string RequestedPartNum { get; set; }

        [JsonProperty("numberFound")]
        public long NumberFound { get; set; }
    }

    public partial class PartList
    {
        [JsonProperty("itemId")]
        public long ItemId { get; set; }

        [JsonProperty("partNum")]
        public string PartNum { get; set; }

        [JsonProperty("manufacturer")]
        public Manufacturer Manufacturer { get; set; }

        [JsonProperty("desc")]
        public string Desc { get; set; }

        [JsonProperty("packageType")]
        public string PackageType { get; set; }

        [JsonProperty("resources")]
        public List<Resource> Resources { get; set; }

        [JsonProperty("EnvData")]
        public EnvData EnvData { get; set; }

        [JsonProperty("InvOrg")]
        public InvOrg InvOrg { get; set; }

        [JsonProperty("hasDatasheet")]
        public bool HasDatasheet { get; set; }
    }

    public partial class EnvData
    {
        [JsonProperty("compliance")]
        public List<Compliance> Compliance { get; set; }
    }

    public partial class Compliance
    {
        [JsonProperty("displayLabel")]
        public string DisplayLabel { get; set; }

        [JsonProperty("displayValue")]
        public string DisplayValue { get; set; }
    }

    public partial class InvOrg
    {
        [JsonProperty("sources")]
        public List<Source> Sources { get; set; }
    }

    public partial class Source
    {
        [JsonProperty("currency")]
        public string Currency { get; set; }

        [JsonProperty("sourceCd")]
        public string SourceCd { get; set; }

        [JsonProperty("displayName")]
        public string DisplayName { get; set; }

        [JsonProperty("sourceParts")]
        public List<SourcePart> SourceParts { get; set; }
    }

    public partial class SourcePart
    {
        [JsonProperty("packSize")]
        public long PackSize { get; set; }

        [JsonProperty("minimumOrderQuantity")]
        public long MinimumOrderQuantity { get; set; }

        [JsonProperty("sourcePartNumber")]
        public string SourcePartNumber { get; set; }

        [JsonProperty("sourcePartId")]
        public string SourcePartId { get; set; }

        [JsonProperty("Prices", NullValueHandling = NullValueHandling.Ignore)]
        public Prices Prices { get; set; }

        [JsonProperty("Availability")]
        public List<Availability> Availability { get; set; }

        [JsonProperty("customerSpecificPricing")]
        public List<object> CustomerSpecificPricing { get; set; }

        [JsonProperty("customerSpecificInventory")]
        public List<object> CustomerSpecificInventory { get; set; }

        [JsonProperty("dateCode")]
        public string DateCode { get; set; }

        [JsonProperty("resources")]
        public List<Resource> Resources { get; set; }

        [JsonProperty("inStock")]
        public bool InStock { get; set; }

        [JsonProperty("mfrLeadTime")]
        public long MfrLeadTime { get; set; }

        [JsonProperty("isNcnr")]
        public bool IsNcnr { get; set; }

        [JsonProperty("isNpi")]
        public bool IsNpi { get; set; }

        [JsonProperty("isASA")]
        public bool IsAsa { get; set; }

        [JsonProperty("requestQuantity")]
        public long RequestQuantity { get; set; }

        [JsonProperty("productCode")]
        public string ProductCode { get; set; }

        [JsonProperty("iccLevels")]
        public List<object> IccLevels { get; set; }

        [JsonProperty("cloudMfrCode")]
        public string CloudMfrCode { get; set; }

        [JsonProperty("eccnCode")]
        public string EccnCode { get; set; }

        [JsonProperty("htsCode")]
        public string HtsCode { get; set; }

        [JsonProperty("countryOfOrigin")]
        public string CountryOfOrigin { get; set; }

        [JsonProperty("locationId")]
        public long LocationId { get; set; }

        [JsonProperty("containerType")]
        public string ContainerType { get; set; }
    }

    public partial class Availability
    {
        [JsonProperty("fohQty")]
        public long FohQty { get; set; }

        [JsonProperty("availabilityCd")]
        public string AvailabilityCd { get; set; }

        [JsonProperty("availabilityMessage")]
        public string AvailabilityMessage { get; set; }

        [JsonProperty("pipeline")]
        public List<object> Pipeline { get; set; }
    }

    public partial class Prices
    {
        [JsonProperty("resaleList")]
        public List<ResaleList> ResaleList { get; set; }
    }

    public partial class ResaleList
    {
        [JsonProperty("displayPrice")]
        public string DisplayPrice { get; set; }

        [JsonProperty("price")]
        public double Price { get; set; }

        [JsonProperty("minQty")]
        public long MinQty { get; set; }

        [JsonProperty("maxQty")]
        public long MaxQty { get; set; }
    }

    public partial class Resource
    {
        [JsonProperty("type")]
        public string Type { get; set; }

        [JsonProperty("uri")]
        public Uri Uri { get; set; }
    }

    public partial class Manufacturer
    {
        [JsonProperty("mfrCd")]
        public string MfrCd { get; set; }

        [JsonProperty("mfrName")]
        public string MfrName { get; set; }
    }

    public partial class ServiceMetaDatum
    {
        [JsonProperty("version")]
        public string Version { get; set; }
    }

    public partial class TransactionArea
    {
        [JsonProperty("response")]
        public Response Response { get; set; }

        [JsonProperty("responseSequence")]
        public ResponseSequence ResponseSequence { get; set; }
    }

    public partial class Response
    {
        [JsonProperty("returnCode")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long ReturnCode { get; set; }

        [JsonProperty("returnMsg")]
        public string ReturnMsg { get; set; }

        [JsonProperty("success")]
        public bool Success { get; set; }
    }

    public partial class ResponseSequence
    {
        [JsonProperty("transactionTime")]
        public string TransactionTime { get; set; }

        [JsonProperty("queryTime")]
        public string QueryTime { get; set; }

        [JsonProperty("dbTime")]
        public string DbTime { get; set; }

        [JsonProperty("totalItems")]
        public long TotalItems { get; set; }

        [JsonProperty("resources")]
        public List<object> Resources { get; set; }

        [JsonProperty("qq")]
        public long Qq { get; set; }
    }

    public partial class ArrowElectronics
    {
        public static ArrowElectronics FromJson(string json) => JsonConvert.DeserializeObject<ArrowElectronics>(json, ArrowElectronicsAPI.Models.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this ArrowElectronics self) => JsonConvert.SerializeObject(self, ArrowElectronicsAPI.Models.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }

    internal class ParseStringConverter : JsonConverter
    {
        public override bool CanConvert(Type t) => t == typeof(long) || t == typeof(long?);

        public override object ReadJson(JsonReader reader, Type t, object existingValue, JsonSerializer serializer)
        {
            if (reader.TokenType == JsonToken.Null) return null;
            var value = serializer.Deserialize<string>(reader);
            long l;
            if (Int64.TryParse(value, out l))
            {
                return l;
            }
            throw new Exception("Cannot unmarshal type long");
        }

        public override void WriteJson(JsonWriter writer, object untypedValue, JsonSerializer serializer)
        {
            if (untypedValue == null)
            {
                serializer.Serialize(writer, null);
                return;
            }
            var value = (long)untypedValue;
            serializer.Serialize(writer, value.ToString());
            return;
        }

        public static readonly ParseStringConverter Singleton = new ParseStringConverter();
    }
}
